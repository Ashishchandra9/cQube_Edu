- name: Ensure bash, OpenSSl, and libssl are the latest versions
  apt:
    name: ['bash', 'openssl', 'libssl-dev', 'libssl-doc']
    update_cache: true
    state: latest
  tags: install

- name: Install PostgreSQL
  apt:
    name: ['postgresql', 'postgresql-contrib', 'libpq-dev', 'python-psycopg2']
    update_cache: true
    state: present
  tags: install

- name: configure postgre file
  replace:
    dest: /etc/postgresql/10/main/pg_hba.conf
    regexp: 'host    all             all             127.0.0.1/32            md5'
    replace: 'host    all             postgres             127.0.0.1/32            trust'
  tags: install  

- name: Inserting configuration in pg_hba.conf file
  lineinfile:
    path: /etc/postgresql/10/main/pg_hba.conf
    line: "host    all             {{ db_user }}            127.0.0.1/32            trust"
    insertafter: "host    all             postgres             127.0.0.1/32            trust"
  tags: install

- name: Assigning the port
  lineinfile:
    path: /etc/postgresql/10/main/postgresql.conf
    regexp: '^port ='
    line: "port = 5432"
  tags: [ install, update ]

- name: Updating listen_addresses in postgres.conf file
  lineinfile:
    path: /etc/postgresql/10/main/postgresql.conf
    regexp: '^listen_addresses'
    insertafter: '^#listen_addresses'
    line: listen_addresses = 'localhost, {{ local_ipv4_address }}'
  tags: [ install, update ]

- name: Ensure the PostgreSQL service is running
  become: true
  service: name=postgresql state=restarted enabled=yes
  tags: [ install, update ]

- name: Ensure database is created
  become: true
  become_user: postgres
  postgresql_db:
    name: "{{ db_name }}"
    encoding: 'UTF-8'
    state: present
  tags: install

- name: Ensure user has access to the database
  become: true
  become_user: postgres
  postgresql_user:
    db: "{{ db_name }}"
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    encrypted: yes
    priv: "ALL"
    role_attr_flags: SUPERUSER,CREATEDB,CREATEROLE,REPLICATION,LOGIN
    state: present
  no_log: true
  tags: install

- name: Run queries from SQL script
  become: true
  become_user: postgres
  postgresql_query:
    db: "{{ db_name }}"
    path_to_script: ../cQube.sql
  notify:
   - restart postgresql
